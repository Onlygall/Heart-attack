# -*- coding: utf-8 -*-
"""Testes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Fuk1pIMhJ_OtE8edST_MNX_xqExMPs3
"""

import streamlit as st
import pandas as pd
import joblib
from joblib import load

# Load model dan dataset
model = load("heart_attack_prediction_pipeline.joblib")
url = 'https://raw.githubusercontent.com/Onlygall/Heart-attack/main/heart_attack_prediction_indonesia.csv'
df = pd.read_csv(url)
df['alcohol_consumption'] = data['alcohol_consumption'].fillna("None")

st.set_page_config(page_title="Prediksi Serangan Jantung", layout="wide")
st.title("💓 Prediksi Risiko Serangan Jantung")
st.markdown("Masukkan data kesehatan Anda untuk memprediksi kemungkinan risiko serangan jantung.")

st.sidebar.header("📋 Input Data Pengguna")

# --- Ambil fitur dari dataset ---
selected_features = [
    'age', 'gender','cholesterol_level', 'cholesterol_ldl', 'cholesterol_hdl', 'triglycerides',
    'blood_pressure_systolic', 'blood_pressure_diastolic',
    'hypertension', 'diabetes', 'smoking_status',
    'obesity', 'waist_circumference', 'physical_activity',
    'previous_heart_disease', 'family_history',
    'alcohol_consumption', 'fasting_blood_sugar', 'EKG_results',
    'medication_usage', 'dietary_habits', 'stress_level',
    'sleep_hours', 'air_pollution_exposure'
]

# Ambil nilai unik dari dataset untuk field kategorikal
def get_options(col):
    return sorted(df[col].dropna().unique().tolist())

# Sidebar Input
user_input = {}
for col in selected_features:
    if df[col].dtype == "object":
        user_input[col] = st.sidebar.selectbox(f"{col.replace('_', ' ').capitalize()}:", get_options(col))
    elif col in ['stress_level', 'air_pollution_exposure']:
        user_input[col] = st.sidebar.slider(f"{col.replace('_', ' ').capitalize()} (0-10):", 0, 10, 5)
    elif col == 'sleep_hours':
        user_input[col] = st.sidebar.slider("Jam Tidur per Hari:", 0.0, 12.0, 6.0, step=0.5)
    elif col == 'age':
        user_input[col] = st.sidebar.slider("Usia (tahun):", 20, 90, 40)
    elif col in ['cholesterol_level', 'cholesterol_ldl', 'cholesterol_hdl', 'triglycerides',
                 'blood_pressure_systolic', 'blood_pressure_diastolic',
                 'waist_circumference', 'fasting_blood_sugar']:
        user_input[col] = st.sidebar.number_input(f"{col.replace('_', ' ').capitalize()}:", min_value=0.0, value=100.0)
    else:
        user_input[col] = st.sidebar.selectbox(f"{col.replace('_', ' ').capitalize()} (0=Tidak, 1=Ya):", [0, 1])

# Tombol Prediksi
if st.sidebar.button("🔍 Prediksi Sekarang"):
    input_df = pd.DataFrame([user_input])
    prediction = model.predict(input_df)[0]
    proba = model.predict_proba(input_df)[0][1]

    st.subheader("🔎 Hasil Prediksi")
    if prediction == 1:
        st.error(f"⚠️ Risiko **TINGGI** terkena serangan jantung.\n\n**Probabilitas:** {proba:.2%}")
    else:
        st.success(f"✅ Risiko **RENDAH** terkena serangan jantung.\n\n**Probabilitas:** {proba:.2%}")

    st.markdown("---")
    st.subheader("📊 Rangkuman Data Input")
    st.dataframe(input_df.T.rename(columns={0: "Nilai"}))
