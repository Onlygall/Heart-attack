# -*- coding: utf-8 -*-
"""70%.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18hvFoCgL7Ap0OtJ8nPTWm2TIP3XXQHV0
"""


import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import joblib
from joblib import load
import pickle
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import (
    classification_report,
    confusion_matrix,
    roc_auc_score,
    roc_curve
)

@st.cache_data
def load_data():
    url = 'https://raw.githubusercontent.com/Onlygall/Heart-attack/main/heart_attack_prediction_indonesia.csv'
    data = pd.read_csv(url)
    data['alcohol_consumption'] = data['alcohol_consumption'].fillna("None")
    return data


# Daftar halaman
pages = [
    "📄 Deskripsi Data",
    "📊 Tentang Dataset",
    "🛠️ Modeling",
    "🔮 Prediksi",
    "👥 Tentang Tim"
]

# Sidebar
st.sidebar.title("Heart Attack")
page = st.sidebar.selectbox("Pilih Halaman", pages)

# ===============================
# Halaman: Deskripsi Data
# ===============================
if page == "📄 Deskripsi Data":
    st.title("🫀 Serangan Jantung Di Indonesia")
    st.markdown("### Statistik, Penyebab, dan Upaya Pencegahan")
    st.write("""
    Serangan jantung merupakan salah satu penyebab kematian utama di Indonesia. Penyakit ini terjadi ketika aliran darah ke bagian jantung tersumbat, biasanya karena penumpukan lemak, kolesterol, dan zat lain.
    Menurut data Kementerian Kesehatan dan WHO, prevalensi penyakit jantung terus meningkat dari tahun ke tahun.

    Berikut adalah data dan informasi terkait tren serangan jantung di Indonesia.
    """)

    # Data statis
    prevalensi_data = pd.DataFrame({
        "Tahun": [2013, 2018, 2023],
        "Prevalensi (%)": [0.5, 1.5, 0.85]
    })
    biaya_data = pd.DataFrame({
        "Tahun": [2014, 2016, 2018, 2023],
        "Biaya (Triliun Rp)": [4.4, 7.4, 9.3, 22.8]
    })
    usia_diagnosis_data = pd.DataFrame({
        "Tahun": [2013, 2023],
        "Usia Rata-rata (Tahun)": [48.5, 43.2]
    })
    kenaikan_usia_data = pd.DataFrame({
        "Kelompok Usia": ["< 45 Tahun", "≥ 46 Tahun"],
        "Kenaikan Kasus (%)": [66, 52]
    })
    provinsi_data = pd.DataFrame({
        "Provinsi": [
            "DI Yogyakarta", "Papua Tengah", "DKI Jakarta", "Jawa Barat", "Kalimantan Timur",
            "Bali", "Kalimantan Utara", "Kepulauan Riau", "Jawa Timur", "Sumatera Barat"
        ],
        "Prevalensi (%)": [1.67, 1.65, 1.56, 1.18, 1.08, 1.0, 0.95, 0.91, 0.88, 0.87]
    })

    # Visualisasi berbagai data
    def line_chart(df, x, y, color, label_y):
        fig, ax = plt.subplots(figsize=(5, 2.5))
        ax.plot(df[x], df[y], marker='o', color=color)
        ax.set_ylabel(label_y)
        ax.grid(True)
        return fig

    st.subheader("📈 Prevalensi Penyakit Jantung per Tahun")
    st.markdown("""
    - **2013**: Prevalensi penyakit jantung sebesar **0,5%** dari populasi.
    - **2018**: Meningkat menjadi **1,5%**, setara dengan lebih dari **2,78 juta** penderita.
    - **2023**: Berdasarkan Survei Kesehatan Indonesia, prevalensi mencapai **0,85%**, dengan jumlah penderita sekitar **2,29 juta orang** dari total **212,6 juta** penduduk berusia 15 tahun ke atas.
    """)
    st.pyplot(line_chart(prevalensi_data, "Tahun", "Prevalensi (%)", 'blue', "Prevalensi (%)"))

    st.subheader("💰 Biaya Penanganan Penyakit Jantung oleh BPJS")
    st.markdown("""
    - **2014**: BPJS Kesehatan mengeluarkan dana sebesar Rp4,4 triliun untuk penanganan penyakit jantung.
    - **2016**: Meningkat menjadi Rp7,4 triliun.
    - **2018**: Naik lagi menjadi Rp9,3 triliun.
    - **2023**: Total pembiayaan untuk penyakit jantung dan stroke mencapai Rp22,8 triliun, menjadikannya beban biaya terbesar dalam program Jaminan Kesehatan Nasional.
    """)
    st.pyplot(line_chart(biaya_data, "Tahun", "Biaya (Triliun Rp)", 'red', "Biaya (Triliun Rp)"))

    st.subheader("👶 Usia Rata-rata Diagnosis Pertama")
    st.markdown("""
    Rata-rata usia diagnosis pertama penyakit jantung menurun dari 48,5 tahun pada 2013 menjadi 43,2 tahun pada 2023.
    """)
    fig3, ax3 = plt.subplots(figsize=(5, 2.5))
    ax3.bar(usia_diagnosis_data["Tahun"], usia_diagnosis_data["Usia Rata-rata (Tahun)"], color='green')
    ax3.set_ylabel("Usia (Tahun)")
    ax3.grid(True)
    st.pyplot(fig3)

    st.subheader("📊 Kenaikan Kasus Berdasarkan Kelompok Usia")
    st.markdown("""
    Kasus penyakit jantung pada usia di bawah 45 tahun meningkat sebesar 66% antara 2020–2023, lebih cepat dibandingkan kelompok usia di atas 46 tahun yang meningkat 52%.
    """)
    fig4, ax4 = plt.subplots(figsize=(5, 2.5))
    ax4.bar(kenaikan_usia_data["Kelompok Usia"], kenaikan_usia_data["Kenaikan Kasus (%)"], color='purple')
    ax4.set_ylabel("Kenaikan Kasus (%)")
    ax4.grid(True)
    st.pyplot(fig4)

    st.subheader("🏥 10 Provinsi dengan Prevalensi Tertinggi (2023)")
    st.markdown("""
    Berdasarkan data Survei Kesehatan Indonesia 2023, berikut adalah 10 provinsi dengan prevalensi penyakit jantung tertinggi:
    """)
    fig5, ax5 = plt.subplots(figsize=(5, 2.5))
    ax5.barh(provinsi_data["Provinsi"], provinsi_data["Prevalensi (%)"], color='orange')
    ax5.set_xlabel("Prevalensi (%)")
    ax5.invert_yaxis()
    ax5.grid(True)
    st.pyplot(fig5)

    st.markdown("---")
    st.caption("Data bersumber dari Kemenkes, BPJS Kesehatan, dan Riskesdas.")

    # Faktor risiko dan pencegahan
    st.markdown("### ⚠️ Faktor Risiko Utama")
    st.markdown("""
    - **Merokok**: Prevalensi merokok di kalangan pria dewasa mencapai **74,3%**, dan **6,5%** di kalangan wanita.
    - **Obesitas**: Prevalensi obesitas meningkat dari **10,5%** pada tahun **2013** menjadi **21,8%** pada tahun **2018**.
    - **Gaya Hidup Tidak Sehat**: Pola makan tinggi lemak, gula, dan garam, serta kurangnya aktivitas fisik.
    - **Stres dan Tekanan Kerja**: Banyak individu usia **30–40 tahun** mengalami tekanan tinggi dari pekerjaan dan tanggung jawab keluarga.
    """)

    st.markdown("### 🩺 Upaya Pencegahan dan Penanggulangan")
    st.markdown("Kementerian Kesehatan RI telah melakukan berbagai upaya untuk menanggulangi peningkatan penyakit jantung, antara lain:")
    st.markdown("*Sumber: [kemkes.go.id](https://kemkes.go.id)*")
    st.markdown("""
    - **Edukasi Masyarakat**: Meningkatkan kesadaran tentang risiko penyakit jantung dan pentingnya gaya hidup sehat melalui program edukasi di sekolah dan komunitas.
    - **Promosi Aktivitas Fisik**: Mendorong masyarakat untuk berolahraga secara teratur.
    - **Penguatan Layanan Primer**: Meningkatkan kapasitas dan kapabilitas layanan kesehatan primer, termasuk pembangunan **Puskesmas** dan penyediaan **obat esensial**.
    """)


# ===============================
# Halaman: Tentang Dataset
# ===============================
elif page == "📊 Tentang Dataset":
    st.title("📊 Tentang Dataset")
    st.markdown("""
    Dataset ini menyajikan profil kesehatan individu di Indonesia secara detail, dengan fokus pada prediksi serangan jantung.
    Data mencakup faktor demografis, klinis, gaya hidup, dan lingkungan yang berperan terhadap risiko penyakit kardiovaskular.

    Indonesia mengalami peningkatan kasus penyakit jantung, sehingga prediksi dan pencegahan dini menjadi sangat penting.
    Dataset ini dirancang untuk mendukung model pembelajaran mesin, riset kesehatan masyarakat, dan studi epidemiologi.

    ---

    🔍 **Definisi Variabel (Deskripsi Lengkap)**

    ### 📂 Demografi
    - `age` (int): Usia individu (25–90 tahun)
    - `gender` (str): Jenis kelamin (Laki-laki, Perempuan)
    - `region` (str): Wilayah tempat tinggal (Perkotaan, Pedesaan)
    - `income_level` (str): Tingkat pendapatan (Rendah, Menengah, Tinggi)

    ### 🏥 Faktor Risiko Klinis
    - `hypertension` (int): Tekanan darah tinggi (1 = Ya, 0 = Tidak)
    - `diabetes` (int): Riwayat diabetes (1 = Ya, 0 = Tidak)
    - `cholesterol_level` (int): Kadar kolesterol total (mg/dL)
    - `obesity` (int): Obesitas (BMI > 30) (1 = Ya, 0 = Tidak)
    - `waist_circumference` (int): Lingkar pinggang dalam cm
    - `family_history` (int): Riwayat keluarga penyakit jantung (1 = Ya, 0 = Tidak)

    ### 🚬 Gaya Hidup & Perilaku
    - `smoking_status` (str): Status merokok (Tidak Pernah, Dulu, Sekarang)
    - `alcohol_consumption` (str): Konsumsi alkohol (Tidak, Sedang, Tinggi)
    - `physical_activity` (str): Aktivitas fisik (Rendah, Sedang, Tinggi)
    - `dietary_habits` (str): Pola makan (Sehat, Tidak Sehat)

    ### 🌍 Faktor Lingkungan & Sosial
    - `air_pollution_exposure` (str): Paparan polusi (Rendah, Sedang, Tinggi)
    - `stress_level` (str): Tingkat stres (Rendah, Sedang, Tinggi)
    - `sleep_hours` (float): Rata-rata jam tidur per malam (3–9 jam)

    ### 🧪 Pemeriksaan Medis & Sistem Kesehatan
    - `blood_pressure_systolic` (int): Tekanan darah sistolik (mmHg)
    - `blood_pressure_diastolic` (int): Tekanan darah diastolik (mmHg)
    - `fasting_blood_sugar` (int): Kadar gula darah puasa (mg/dL)
    - `cholesterol_hdl` (int): Kadar kolesterol HDL (mg/dL)
    - `cholesterol_ldl` (int): Kadar kolesterol LDL (mg/dL)
    - `triglycerides` (int): Kadar trigliserida (mg/dL)
    - `EKG_results` (str): Hasil elektrokardiogram (Normal, Abnormal)
    - `previous_heart_disease` (int): Riwayat penyakit jantung sebelumnya (1 = Ya, 0 = Tidak)
    - `medication_usage` (int): Sedang mengonsumsi obat jantung (1 = Ya, 0 = Tidak)
    - `participated_in_free_screening` (int): Pernah ikut program skrining gratis (1 = Ya, 0 = Tidak)

    ### 🎯 Variabel Target
    - `heart_attack` (int): Kejadian serangan jantung (1 = Ya, 0 = Tidak)
    """)
    st.markdown("---")
    st.caption("*Sumber: https://www.kaggle.com/datasets/ankushpanday2/heart-attack-prediction-in-indonesia*")

    data = load_data()

    st.subheader("🔹 10 Data Teratas")
    st.write("Jumlah baris dan kolom:", data.shape)
    st.write("Menampilkan 10 Data Pertama:")
    st.dataframe(data.head(10))

    st.subheader("📐 Statistik Deskriptif")
    st.dataframe(data.describe())

    # Distribusi Fitur Numerik
    st.subheader("📈 Distribusi Fitur Numerik")
    num_cols = data.select_dtypes(include='number').columns.tolist()
    fig, axs = plt.subplots(len(num_cols) // 3 + 1, 3, figsize=(12, 4 * (len(num_cols) // 3 + 1)))
    axs = axs.flatten()

    for i, col in enumerate(num_cols):
        sns.histplot(data[col], kde=True, ax=axs[i], color='skyblue')
        axs[i].set_title(f"Distribusi {col}")
    for j in range(i + 1, len(axs)):
        fig.delaxes(axs[j])
    plt.tight_layout()
    st.pyplot(fig)

    st.markdown("""
    - Histogram + kurva KDE untuk deteksi pola distribusi data.
    """)

    # Boxplot Outlier
    st.subheader("🧪 Deteksi Outlier dengan Boxplot")
    fig2, ax2 = plt.subplots(figsize=(12, 5))
    sns.boxplot(dt=data[num_cols], ax=ax2)
    ax2.set_title("Boxplot Fitur Numerik")
    st.pyplot(fig2)

    # Korelasi
    st.subheader("🔗 Korelasi antar Variabel")
    corr = data[num_cols].corr()
    fig3, ax3 = plt.subplots(figsize=(12, 6))
    sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f', ax=ax3)
    ax3.set_title("Matriks Korelasi")
    st.pyplot(fig3)




# ===============================
# Halaman: Modeling
# ===============================
elif page == "🛠️ Modeling":
    st.title("🛠️ Modeling Data")
    st.write("Halaman ini digunakan untuk melatih dan mengevaluasi model prediksi serangan jantung.")
    st.markdown("### Evaluasi Model: Heart Attack Prediction")

    model = load("heart_attack_prediction_pipeline.joblib")

    X_test = pd.read_csv("X_test.csv")
    y_test = pd.read_csv("y_test.csv")

    y_pred = model.predict(X_test)
    y_proba = model.predict_proba(X_test)[:, 1]

    st.subheader("📊 Evaluasi Model")
    accuracy = (y_pred == y_test.values.ravel()).mean()
    auc = roc_auc_score(y_test, y_proba)

    st.metric("Akurasi", f"{accuracy:.2%}")
    st.metric("AUC Score", f"{auc:.3f}")

    st.subheader("📋 Classification Report")
    report_df = pd.DataFrame(classification_report(y_test, y_pred, output_dict=True)).transpose()
    st.dataframe(report_df.style.format("{:.2f}"))

    st.subheader("📌 Confusion Matrix")
    cm = confusion_matrix(y_test, y_pred)
    fig, ax = plt.subplots()
    sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=[0, 1], yticklabels=[0, 1])
    plt.xlabel("Predicted")
    plt.ylabel("Actual")
    st.pyplot(fig)

    st.subheader("📉 ROC Curve")
    fpr, tpr, _ = roc_curve(y_test, y_proba)
    fig2, ax2 = plt.subplots()
    ax2.plot(fpr, tpr, label=f"AUC = {auc:.2f}")
    ax2.plot([0, 1], [0, 1], "k--")
    ax2.set_xlabel("False Positive Rate")
    ax2.set_ylabel("True Positive Rate")
    ax2.set_title("ROC Curve")
    ax2.legend()
    st.pyplot(fig2)

    st.subheader("📌 Feature Importance")
    try:
        importances = model.named_steps["classifier"].feature_importances_
        features = model.named_steps["preprocessor"].get_feature_names_out()
        imp_df = pd.DataFrame({"Feature": features, "Importance": importances}).sort_values("Importance", ascending=False)

        fig3, ax3 = plt.subplots()
        sns.barplot(x="Importance", y="Feature", data=imp_df.head(10), ax=ax3)
        st.pyplot(fig3)
    except:
        st.info("Feature importance tidak tersedia atau model tidak mendukung.")

# ===============================
# Halaman: Prediksi
# ===============================
elif page == "🔮 Prediksi":
    st.title("🔮 Prediksi Heart Attack")
    st.write("Masukkan data pasien untuk memprediksi kemungkinan serangan jantung.")
    model = load("heart_attack_prediction_pipeline.joblib")

    # Input Form
    age = st.number_input("Umur", min_value=1, max_value=120, value=30)
    gender = st.selectbox("Jenis Kelamin", ["Laki-laki", "Perempuan"])
    gender_encoded = 1 if gender == "Laki-laki" else 0

    cholesterol_level = st.number_input("Total Kolesterol", min_value=0.0)
    cholesterol_ldl = st.number_input("LDL Kolesterol", min_value=0.0)
    cholesterol_hdl = st.number_input("HDL Kolesterol", min_value=0.0)
    triglycerides = st.number_input("Trigliserida", min_value=0.0)
    blood_pressure_systolic = st.number_input("Tekanan Darah Sistolik", min_value=0)
    blood_pressure_diastolic = st.number_input("Tekanan Darah Diastolik", min_value=0)
    hypertension = st.selectbox("Hipertensi", [0, 1])
    diabetes = st.selectbox("Diabetes", [0, 1])
    smoking_status = st.selectbox("Merokok", [0, 1])
    obesity = st.selectbox("Obesitas", [0, 1])
    waist_circumference = st.number_input("Lingkar Pinggang (cm)", min_value=0.0)
    physical_activity = st.number_input("Aktivitas Fisik (jam/minggu)", min_value=0.0)
    previous_heart_disease = st.selectbox("Riwayat Penyakit Jantung", [0, 1])
    family_history = st.selectbox("Riwayat Keluarga", [0, 1])
    alcohol_consumption = st.selectbox("Konsumsi Alkohol", [0, 1])
    fasting_blood_sugar = st.number_input("Gula Darah Puasa (mg/dL)", min_value=0.0)
    EKG_results = st.selectbox("Hasil EKG", [0, 1, 2])
    medication_usage = st.selectbox("Penggunaan Obat", [0, 1])
    dietary_habits = st.selectbox("Kebiasaan Diet (1=Baik, 0=Buruk)", [0, 1])
    stress_level = st.slider("Tingkat Stres (1=rendah, 10=tinggi)", min_value=1, max_value=10)
    sleep_hours = st.number_input("Jam Tidur per Hari", min_value=0.0, max_value=24.0)
    air_pollution_exposure = st.number_input("Paparan Polusi Udara (PM2.5 μg/m³)", min_value=0.0)

    if st.button("Prediksi"):
        input_data = np.array([[
            age, gender_encoded, cholesterol_level, cholesterol_ldl, cholesterol_hdl,
            triglycerides, blood_pressure_systolic, blood_pressure_diastolic,
            hypertension, diabetes, smoking_status, obesity,
            waist_circumference, physical_activity, previous_heart_disease,
            family_history, alcohol_consumption, fasting_blood_sugar,
            EKG_results, medication_usage, dietary_habits,
            stress_level, sleep_hours, air_pollution_exposure
        ]])

        prediction = model.predict(input_data)
        result = "💔 Berisiko Serangan Jantung" if prediction[0] == 1 else "❤️ Tidak Berisiko"
        st.subheader("Hasil Prediksi:")
        st.success(result)

# ===============================
# Halaman: Tentang Tim
# ===============================
elif page == "👥 Tentang Tim":
    st.title("👥 Tentang Tim")
    st.markdown("""
    Aplikasi ini dikembangkan oleh kelompok 6 mata kuliah : Data mining, mahasiswa Matematika untuk keperluan tugas.

    dengan dosen pengampu : Bp. M. Faris Al Hakim S.Pd., M.Cs

    **Anggota Kelompok:**
    - 👤 Najwa -
    - 👤 Galeh -
    - 👤 Zulfa -
    - 👤 Wahida -
    Terima kasih telah menggunakan aplikasi kami! ❤️""")
