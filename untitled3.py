# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Pi7aZFfS_qo7rUCwS01T6O-Ek5z4-uT
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import io
import seaborn as sns

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# ===============================
# Sidebar Navigasi
# ===============================
st.sidebar.title("Heart Attack")
page = st.sidebar.radio("Pilih Halaman", ["📄 Deskripsi Data", "🛠️ Modeling", "🔮 Prediksi"])

# ===============================
# Halaman: Deskripsi Data
# ===============================
if page == "📄 Deskripsi Data":
    st.title("🫀 Serangan Jantung di Indonesia")
    st.markdown("### Statistik, Penyebab, dan Upaya Pencegahan")

    # Data statis
    prevalensi_data = pd.DataFrame({
        "Tahun": [2013, 2018, 2023],
        "Prevalensi (%)": [0.5, 1.5, 0.85]
    })

    biaya_data = pd.DataFrame({
        "Tahun": [2014, 2016, 2018, 2023],
        "Biaya (Triliun Rp)": [4.4, 7.4, 9.3, 22.8]
    })

    usia_diagnosis_data = pd.DataFrame({
        "Tahun": [2013, 2023],
        "Usia Rata-rata (Tahun)": [48.5, 43.2]
    })

    kenaikan_usia_data = pd.DataFrame({
        "Kelompok Usia": ["< 45 Tahun", "≥ 46 Tahun"],
        "Kenaikan Kasus (%)": [66, 52]
    })

    provinsi_data = pd.DataFrame({
        "Provinsi": [
            "DI Yogyakarta", "Papua Tengah", "DKI Jakarta", "Jawa Barat", "Kalimantan Timur",
            "Bali", "Kalimantan Utara", "Kepulauan Riau", "Jawa Timur", "Sumatera Barat"
        ],
        "Prevalensi (%)": [1.67, 1.65, 1.56, 1.18, 1.08, 1.0, 0.95, 0.91, 0.88, 0.87]
    })

    # Visualisasi Prevalensi
    st.subheader("📈 Prevalensi Penyakit Jantung per Tahun")
    st.markdown("""
    - **2013**: 0,5% dari populasi
    - **2018**: 1,5% (~2,78 juta)
    - **2023**: 0,85% (~2,29 juta dari 212,6 juta)
    """)
    fig1, ax1 = plt.subplots(figsize=(5, 2.5))
    ax1.plot(prevalensi_data["Tahun"], prevalensi_data["Prevalensi (%)"], marker='o', color='blue')
    ax1.set_ylabel("Prevalensi (%)")
    ax1.grid(True)
    st.pyplot(fig1)

    # Visualisasi Biaya
    st.subheader("💰 Biaya Penanganan Penyakit Jantung oleh BPJS")
    fig2, ax2 = plt.subplots(figsize=(5, 2.5))
    ax2.plot(biaya_data["Tahun"], biaya_data["Biaya (Triliun Rp)"], marker='s', color='red')
    ax2.set_ylabel("Biaya (Triliun Rp)")
    ax2.grid(True)
    st.pyplot(fig2)

    # Visualisasi Usia Diagnosis
    st.subheader("👶 Usia Rata-rata Diagnosis Pertama")
    fig3, ax3 = plt.subplots(figsize=(5, 2.5))
    ax3.bar(usia_diagnosis_data["Tahun"], usia_diagnosis_data["Usia Rata-rata (Tahun)"], color='green')
    ax3.set_ylabel("Usia (Tahun)")
    ax3.grid(True)
    st.pyplot(fig3)

    # Visualisasi Kenaikan Kasus
    st.subheader("📊 Kenaikan Kasus Berdasarkan Kelompok Usia")
    fig4, ax4 = plt.subplots(figsize=(5, 2.5))
    ax4.bar(kenaikan_usia_data["Kelompok Usia"], kenaikan_usia_data["Kenaikan Kasus (%)"], color='purple')
    ax4.set_ylabel("Kenaikan Kasus (%)")
    ax4.grid(True)
    st.pyplot(fig4)

    # Visualisasi Provinsi
    st.subheader("🏥 10 Provinsi dengan Prevalensi Tertinggi (2023)")
    fig5, ax5 = plt.subplots(figsize=(5, 2.5))
    ax5.barh(provinsi_data["Provinsi"], provinsi_data["Prevalensi (%)"], color='orange')
    ax5.set_xlabel("Prevalensi (%)")
    ax5.invert_yaxis()
    ax5.grid(True)
    st.pyplot(fig5)

    st.markdown("---")
    st.caption("Data bersumber dari Kemenkes, BPJS Kesehatan, dan Riskesdas.")

    # Faktor Risiko
    st.markdown("### ⚠️ Faktor Risiko Utama")
    st.markdown("""
    - **Merokok**: Pria 74,3%, Wanita 6,5%
    - **Obesitas**: 10,5% (2013) → 21,8% (2018)
    - **Gaya Hidup Tidak Sehat**
    - **Stres dan Tekanan Kerja**
    """)

    # Pencegahan
    st.markdown("### 🩺 Upaya Pencegahan dan Penanggulangan")
    st.markdown("*Sumber: [kemkes.go.id](https://kemkes.go.id)*")
    st.markdown("""
    - **Edukasi Masyarakat**
    - **Promosi Aktivitas Fisik**
    - **Penguatan Layanan Primer**
    """)

    # Eksplorasi Data
    st.markdown("### 📊 Eksplorasi Data: Heart Attack Prediction Indonesia")
    url = 'https://raw.githubusercontent.com/Onlygall/Heart-attack/main/heart_attack_prediction_indonesia.csv'
    df = pd.read_csv(url)
    df['alcohol_consumption'] = df['alcohol_consumption'].fillna("None")

    st.write("Jumlah baris dan kolom:", df.shape)
    st.write("Menampilkan 10 Data Pertama")
    st.dataframe(df.head(10))

    st.subheader("📐 Statistik Deskriptif")
    st.dataframe(df.describe())

    # Distribusi Fitur Numerik
    st.subheader("📈 Distribusi Fitur Numerik")
    num_cols = df.select_dtypes(include='number').columns.tolist()
    fig, axs = plt.subplots(len(num_cols) // 3 + 1, 3, figsize=(12, 4 * (len(num_cols) // 3 + 1)))
    axs = axs.flatten()

    for i, col in enumerate(num_cols):
        sns.histplot(df[col], kde=True, ax=axs[i], color='skyblue')
        axs[i].set_title(f"Distribusi {col}")
    for j in range(i + 1, len(axs)):
        fig.delaxes(axs[j])
    plt.tight_layout()
    st.pyplot(fig)

    st.markdown("""
    - Histogram + kurva KDE untuk deteksi pola distribusi data.
    """)

    # Boxplot Outlier
    st.subheader("🧪 Deteksi Outlier dengan Boxplot")
    fig2, ax2 = plt.subplots(figsize=(12, 5))
    sns.boxplot(data=df[num_cols], ax=ax2)
    ax2.set_title("Boxplot Fitur Numerik")
    st.pyplot(fig2)

    # Korelasi
    st.subheader("🔗 Korelasi antar Variabel")
    corr = df[num_cols].corr()
    fig3, ax3 = plt.subplots(figsize=(12, 6))
    sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f', ax=ax3)
    ax3.set_title("Matriks Korelasi")
    st.pyplot(fig3)

# ===============================
# Halaman: Modeling
# ===============================
elif page == "🛠️ Modeling":
    st.title("🛠️ Modeling Data")

    url = 'https://raw.githubusercontent.com/Onlygall/Heart-attack/main/heart_attack_prediction_indonesia.csv'
    df = pd.read_csv(url)
    df['alcohol_consumption'] = df['alcohol_consumption'].fillna("None")

    target_col = "heart_attack"

    if target_col in df.columns:
        st.markdown(f"Menggunakan kolom **{target_col}** sebagai target.")

        X = df.drop(columns=[target_col])
        y = df[target_col]

        # Encode
        X = pd.get_dummies(X, drop_first=True)

        # Split
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

        # Train Model
        model = RandomForestClassifier(random_state=42)
        model.fit(X_train, y_train)

        # Feature Importance
        st.subheader("📌 Pentingnya Fitur")
        importances = pd.Series(model.feature_importances_, index=X.columns)
        top_features = importances.sort_values(ascending=False).head(10)
        st.bar_chart(top_features)

        st.markdown("Fitur di atas adalah yang paling berkontribusi terhadap prediksi risiko serangan jantung.")

    else:
        st.warning("Kolom 'heart_attack_risk' tidak ditemukan.")

# ===============================
# Halaman: Prediksi
# ===============================
elif page == "🔮 Prediksi":
    st.title("🔮 Prediksi Heart Attack")
    st.markdown("Halaman prediksi akan dikembangkan lebih lanjut.")

